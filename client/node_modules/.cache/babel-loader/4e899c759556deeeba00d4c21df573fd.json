{"ast":null,"code":"var _jsxFileName = \"/home/mora/Escritorio/PF-GRUPAL/client/src/Pages/Registro-Usuario/Registrate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser } from \"../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Registrate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register({\n  addUser,\n  responseGoogle\n}) {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [input, setInput] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const dispatch = useDispatch();\n\n  const validate = input => {\n    let pattern = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/;\n    let errors = {};\n\n    if (!input.name) {\n      errors.name = \"Name is required\";\n    }\n\n    if (!input.email) {\n      errors.email = \"email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(input.email)) {\n      errors.email = \"email is invalid\";\n    }\n\n    if (!input.password) {\n      errors.password = \"Password is required\";\n    } else if (!pattern.test(input.password)) {\n      errors.password = \"Password is invalid\";\n    }\n\n    return errors;\n  };\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate({ ...input,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    alert(\"Registration Successful\");\n    addUser(input);\n    await axios.post('http://localhost:3001/email/welcome', input);\n    setInput({\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"txtRegistrate\",\n      children: \"Registrate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"regis-form\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"p3\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${errors.name && \"danger\"}`,\n            type: \"text\",\n            name: \"name\",\n            onChange: handleInputChange,\n            value: input.name,\n            className: \"reg-username\",\n            placeholder: \"Ingrese su nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"danger\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"p4\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${errors.email && \"danger\"}`,\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"nombre@ejemplo.com\",\n            onChange: e => handleInputChange(e),\n            value: input.email,\n            className: \"reg-email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"danger\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"p5\",\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${errors.password && \"danger\"}`,\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"M\\xE1s de 6 car\\xE1cteres\",\n            onChange: e => handleInputChange(e),\n            value: input.password,\n            className: \"reg-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"danger\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormInput\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/iniciasesion\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reg-submit\",\n              onClick: handleSubmit,\n              type: \"submit\",\n              children: \"Registrate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"yH83nXHxLdgUNLYN60McnNbL21U=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Register;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUser: info => dispatch(addUser(info))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/mora/Escritorio/PF-GRUPAL/client/src/Pages/Registro-Usuario/Registrate.jsx"],"names":["React","useState","useDispatch","addUser","connect","Link","axios","Register","responseGoogle","errors","setErrors","input","setInput","name","email","password","dispatch","validate","pattern","test","handleInputChange","e","target","value","handleSubmit","preventDefault","alert","post","mapDispatchToProps","info"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser } from \"../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Registrate.css\";\n\nfunction Register({ addUser, responseGoogle }) {\n  const [errors, setErrors] = useState({});\n  const [input, setInput] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  const validate = (input) => {\n    let pattern = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/;\n    let errors = {};\n    if (!input.name) {\n      errors.name = \"Name is required\";\n    }\n    if (!input.email) {\n      errors.email = \"email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(input.email)) {\n      errors.email = \"email is invalid\";\n    }\n    if (!input.password) {\n      errors.password = \"Password is required\";\n    } else if (!pattern.test(input.password)) {\n      errors.password = \"Password is invalid\";\n    }\n    return errors;\n  };\n\n  const handleInputChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n    setErrors(\n      validate({\n        ...input,\n        [e.target.name]: e.target.value,\n      })\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    alert(\"Registration Successful\")\n    addUser(input);\n    await axios.post('http://localhost:3001/email/welcome', input)\n    setInput({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <div>\n      <h2 className=\"txtRegistrate\">Registrate</h2>\n      <br/>\n      <div className=\"card\">\n        <form className=\"regis-form\" onSubmit={(e) => handleSubmit(e)}>\n          <div>\n            <br/>\n            <label className=\"p3\">Nombre</label>\n            <input\n              className={`${errors.name && \"danger\"}`}\n              type=\"text\"\n              name=\"name\"\n              onChange={handleInputChange}\n              value={input.name}\n              className=\"reg-username\"\n              placeholder=\"Ingrese su nombre\"\n            />\n            {errors.name && <p className=\"danger\">{errors.name}</p>}\n          </div>\n          <div>\n            <label className=\"p4\">Email</label>\n            <input\n              className={`${errors.email && \"danger\"}`}\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"nombre@ejemplo.com\"\n              onChange={(e) => handleInputChange(e)}\n              value={input.email}\n              className=\"reg-email\"\n            />\n            {errors.email && <p className=\"danger\">{errors.email}</p>}\n          </div>\n          <div>\n            <label className=\"p5\">Contraseña</label>\n            <input\n              className={`${errors.password && \"danger\"}`}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Más de 6 carácteres\"\n              onChange={(e) => handleInputChange(e)}\n              value={input.password}\n              className=\"reg-password\"\n            />\n            {errors.password && <p className=\"danger\">{errors.password}</p>}\n          </div>\n          <div className=\"FormInput\">\n            <Link to=\"/iniciasesion\">\n            <button\n              className=\"reg-submit\"\n              onClick={handleSubmit}\n              type=\"submit\"\n            >\n              Registrate\n            </button>\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUser: (info) => dispatch(addUser(info)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}