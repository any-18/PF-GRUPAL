{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\florf\\\\Desktop\\\\ULTIMO CLONADOOO\\\\PF-GRUPAL\\\\client\\\\src\\\\Pages\\\\Registro-Usuario\\\\Registrate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { addUser } from \"../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport GoogleLogin from \"react-google-login\";\nimport \"./Registrate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register({\n  addUser,\n  responseGoogle\n}) {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [input, setInput] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const validate = input => {\n    let pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%&]).{8,}$/;\n    let errors = {};\n\n    if (!input.name) {\n      errors.name = \"Name is required\";\n    }\n\n    if (!input.email) {\n      errors.email = \"email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(input.email)) {\n      errors.email = \"email is invalid\";\n    }\n\n    if (!input.password) {\n      errors.password = \"Password is required\";\n    } else if (!pattern.test(input.password)) {\n      errors.password = \"Password is invalid\";\n    }\n\n    return errors;\n  };\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate({ ...input,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addUser(input);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"txtRegistrate\",\n      children: \"Registrate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"regis-form\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"p3\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${errors.name && \"danger\"}`,\n            type: \"text\",\n            name: \"name\",\n            onChange: handleInputChange,\n            value: input.name,\n            className: \"reg-username\",\n            placeholder: \"Ingrese su nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"danger\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"p4\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${errors.email && \"danger\"}`,\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"nombre@ejemplo.com\",\n            onChange: e => handleInputChange(e),\n            value: input.email,\n            className: \"reg-email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"danger\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"p5\",\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${errors.password && \"danger\"}`,\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"M\\xE1s de 6 car\\xE1cteres\",\n            onChange: e => handleInputChange(e),\n            value: input.password,\n            className: \"reg-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"danger\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormInput\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reg-submit\",\n            onClick: () => alert(\"Registration Successful\"),\n            type: \"submit\",\n            children: \"Registrate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"z0Rt1YePCO2Bt1ML6o1IdrHR+PU=\");\n\n_c = Register;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUser: info => dispatch(addUser(info))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/florf/Desktop/ULTIMO CLONADOOO/PF-GRUPAL/client/src/Pages/Registro-Usuario/Registrate.jsx"],"names":["React","useState","addUser","connect","GoogleLogin","Register","responseGoogle","errors","setErrors","input","setInput","name","email","password","validate","pattern","test","handleInputChange","e","target","value","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch","info"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { addUser } from \"../../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport \"./Registrate.css\";\r\n\r\nfunction Register({ addUser, responseGoogle }) {\r\n  const [errors, setErrors] = useState({});\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const validate = (input) => {\r\n    let pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%&]).{8,}$/;\r\n    let errors = {};\r\n    if (!input.name) {\r\n      errors.name = \"Name is required\";\r\n    }\r\n    if (!input.email) {\r\n      errors.email = \"email is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(input.email)) {\r\n      errors.email = \"email is invalid\";\r\n    }\r\n    if (!input.password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (!pattern.test(input.password)) {\r\n      errors.password = \"Password is invalid\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    setErrors(\r\n      validate({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addUser(input);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"txtRegistrate\">Registrate</h2>\r\n      <br/>\r\n      <div className=\"card\">\r\n        <form className=\"regis-form\" onSubmit={(e) => handleSubmit(e)}>\r\n          <div>\r\n            <br/>\r\n            <label className=\"p3\">Nombre</label>\r\n            <input\r\n              className={`${errors.name && \"danger\"}`}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleInputChange}\r\n              value={input.name}\r\n              className=\"reg-username\"\r\n              placeholder=\"Ingrese su nombre\"\r\n            />\r\n            {errors.name && <p className=\"danger\">{errors.name}</p>}\r\n          </div>\r\n          <div>\r\n            <label className=\"p4\">Email</label>\r\n            <input\r\n              className={`${errors.email && \"danger\"}`}\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"nombre@ejemplo.com\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              value={input.email}\r\n              className=\"reg-email\"\r\n            />\r\n            {errors.email && <p className=\"danger\">{errors.email}</p>}\r\n          </div>\r\n          <div>\r\n            <label className=\"p5\">Contraseña</label>\r\n            <input\r\n              className={`${errors.password && \"danger\"}`}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Más de 6 carácteres\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              value={input.password}\r\n              className=\"reg-password\"\r\n            />\r\n            {errors.password && <p className=\"danger\">{errors.password}</p>}\r\n          </div>\r\n          <div className=\"FormInput\">\r\n            <button\r\n              className=\"reg-submit\"\r\n              onClick={() => alert(\"Registration Successful\")}\r\n              type=\"submit\"\r\n            >\r\n              Registrate\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addUser: (info) => dispatch(addUser(info)),\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n"]},"metadata":{},"sourceType":"module"}